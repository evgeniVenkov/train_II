import numpy as np

arr = np.array([[1,2],
               [3,4]])
#[[1 2]
#[3 4]]

#Колличество осей
arr.ndim
#2

# колличество элементов в масиве
arr.size
#4

#Кол элем по осям
arr.shape
#(2,2)

# тип данных
arr.dtype = np.int8

#создание массива
arr = np.empty([3,2,1], dtype = np.int8)
# [[[124]
#   [ 14]]
#
#  [[106]
#   [ 62]]
#
#  [[  0]
#   [  0]]]

#Создание массива единиц
arr = np.ones([3,2,2])
# [[[1. 1.]
#   [1. 1.]]
#
#  [[1. 1.]
#   [1. 1.]]
#
#  [[1. 1.]
#   [1. 1.]]]

#Создание массива единиц размером переданного в него массива
arr_1 = np.ones_like(arr,dtype = np.int8)
# [[[1 1]
#   [1 1]]
#
#  [[1 1]
#   [1 1]]
#
#  [[1 1]
#   [1 1]]]

#Создание массива нолей
arr = np.zeros([3,2,1])
# [[[0.]
#   [0.]]
#
#  [[0.]
#   [0.]]
#
#  [[0.]
#   [0.]]]

#Создание массива нолей размером переданного в него массива
arr_1 = np.zeros_like(arr,dtype = np.int8)
# [[[0]
#   [0]]
#
#  [[0]
#   [0]]
#
#  [[0]
#   [0]]]

#Создание массива с переданным значением
arr = np.full([3,1,2],3,dtype = np.int8)
# [[[3 3]]
#
#  [[3 3]]
#
#  [[3 3]]]

#Создание массива спереданными значениями и размером переданного в него массива
arr = np.full_like(arr,7)
# [[[7 7]]
#
#  [[7 7]]
#
#  [[7 7]]]

#МАССИВЫ С ЧИСЛОВЫМИ ДИАПАЗОНАМИ
arr = np.arange(5)
# [0 1 2 3 4]

arr = np.arange(5,10)
#[5 6 7 8 9]

arr = np.arange(5,10,2)
# [5 7 9]

#МАТРИЦЫ
arr = np.matrix([1,2,3,4])
#[[1 2 3 4]]

arr = np.matrix([[1,2,3],[4,5,6]])
#[[1 2 3]
# [4 5 6]]

arr = np.diag([1,2,3,4])
# [[1 0 0 0]
#  [0 2 0 0]
#  [0 0 3 0]
#  [0 0 0 4]]

print(arr)